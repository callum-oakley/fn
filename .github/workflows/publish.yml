on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test
  get-version:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
      published: ${{ steps.vars.outputs.published }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install --path .
      - id: vars
        run: |
          version="$(
            cat Cargo.toml | fn '$.match(/version = "(\d+\.\d+\.\d+)"/)[1]'
          )"
          published="$(
            curl -s https://crates.io/api/v1/crates/fn |
              version="${version}" fn -p '$.versions.map(a => a.num).includes($version)'
          )"
          echo version="${version}" | tee -a "${GITHUB_OUTPUT}"
          echo published="${published}" | tee -a "${GITHUB_OUTPUT}"
  release:
    needs: get-version
    if: ${{ needs.get-version.outputs.published == 'false' }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: gh release create v${{ needs.get-version.outputs.version }} --generate-notes
  cargo-publish:
    needs: get-version
    if: ${{ needs.get-version.outputs.published == 'false' }}
    runs-on: ubuntu-latest
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo publish
      
